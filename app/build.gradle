plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
}

android {
    def KEY_STORE_PASSWORD
    def KEY_STORE
    def KEY_STORE_ALIAS

    namespace 'com.aafaq.salatapp'

    compileSdkVersion buildConfigs.compileSdk

    defaultConfig {
        applicationId "com.aafaq.salatapp"

        minSdkVersion buildConfigs.minimumSdk
        targetSdkVersion buildConfigs.targetSdk
        versionCode buildConfigs.code
        versionName buildConfigs.name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    /**
     * local.properties must exist to ensure, the build system to process and compile
     * */
    Properties properties = new Properties()
    if (rootProject.file("local.properties").exists() && project.getName().contains("release")) {
        properties.load(project.rootProject.file('local.properties').newDataInputStream())

        /**
         * RELEASE
         * */
        KEY_STORE_PASSWORD = properties.getProperty('KEY_PASSOWORD')
        KEY_STORE = '../buildsystem/keystores/affwan_release.jks'
        KEY_STORE_ALIAS = properties.getProperty('KEY_ALIAS')

    } else {
        /**
         * DEBUG
         * */
        KEY_STORE = '../buildsystem/keystores/affwan_debug.jks'
        KEY_STORE_PASSWORD = 'development'
        KEY_STORE_ALIAS = 'affwan'
    }

    signingConfigs {
        release {
            storeFile file(KEY_STORE)
            storePassword KEY_STORE_PASSWORD
            keyAlias KEY_STORE_ALIAS
            keyPassword KEY_STORE_PASSWORD
        }

        debug {
            storeFile file(KEY_STORE)
            storePassword KEY_STORE_PASSWORD
            keyAlias KEY_STORE_ALIAS
            keyPassword KEY_STORE_PASSWORD
        }
    }


    buildTypes {
        debug {
            debuggable true
            manifestPlaceholders = [applicationLabel: "@string/app_name_debug"]
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }

        qa {
            debuggable false
            manifestPlaceholders = [applicationLabel: "@string/app_name_qa"]
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }

        release {
            debuggable false
            manifestPlaceholders = [applicationLabel: "@string/app_name"]
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    buildFeatures {
        viewBinding = true
        dataBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api project(path: ':core')

    //hilt
    implementation dagger.hilt
    kapt dagger.hiltkapt

    //test
    testImplementation test.junit
    androidTestImplementation test.extjnit
    androidTestImplementation test.espresso

    //androidx
    implementation androidx.appcompact
    implementation androidx.constraintLayout
    implementation androidx.material
    implementation androidx.percentLayout
    implementation androidx.core
    implementation androidx.activity

    //kotlin
    implementation androidx.lifecycle
    implementation androidx.livedata
    implementation androidx.viewmodel
    implementation androidx.multidex

    //legacy support
    implementation androidx.legacy_support

    //fragment
    implementation androidx.navigation
    implementation androidx.navigationui
    implementation androidx.fragment

    //only
    implementation external.only

    //lottie
    implementation external.lottie

    //glide
    implementation external.glide
    annotationProcessor external.glidecompiler

    //extras
    implementation external.shimmer
    implementation external.rmswitch

    //multi density
    implementation external.ssp
    implementation external.sdp
}
